<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2021-08-05T11:24:32Z</date>
    <media_types>
        <media_type>
            <name>Alexa Webhook (NotifyMe)</name>
            <type>WEBHOOK</type>
            <parameters>
                <parameter>
                    <name>message</name>
                    <value>{ALERT.MESSAGE}</value>
                </parameter>
                <parameter>
                    <name>subject</name>
                    <value>{ALERT.SUBJECT}</value>
                </parameter>
                <parameter>
                    <name>Token</name>
                    <value/>
                </parameter>
            </parameters>
            <script>var alexa = {&#13;
    token: null,&#13;
    message: null,&#13;
    proxy: null,&#13;
    parse_mode: null,&#13;
&#13;
    sendmessage: function() {&#13;
        var params = {&#13;
          &quot;accessCode&quot;: alexa.token,&#13;
          &quot;notification&quot;: alexa.message&#13;
        },&#13;
        data,&#13;
        response,&#13;
        request = new CurlHttpRequest(),&#13;
        url = 'https://api.notifymyecho.com/v1/NotifyMe';&#13;
&#13;
        if (alexa.parse_mode !== null) {&#13;
            params['parse_mode'] = alexa.parse_mode;&#13;
        }&#13;
&#13;
        if (alexa.proxy) {&#13;
            request.SetProxy(alexa.proxy);&#13;
        }&#13;
&#13;
        request.AddHeader('Content-Type: application/json');&#13;
        data = JSON.stringify(params);&#13;
&#13;
        // Remove replace() function if you want to see the exposed token in the log file.&#13;
        Zabbix.Log(4, '[Alexa Webhook] URL: ' + url.replace(alexa.token, '&lt;TOKEN&gt;'));&#13;
        Zabbix.Log(4, '[Alexa Webhook] params: ' + data);&#13;
        response = request.Post(url, data);&#13;
        Zabbix.Log(4, '[Alexa Webhook] HTTP code: ' + request.Status());&#13;
&#13;
        try {&#13;
            response = JSON.parse(response);&#13;
        }&#13;
        catch (error) {&#13;
            response = null;&#13;
        }&#13;
&#13;
        if (request.Status() !== 202) {&#13;
            if (typeof response.description === 'string') {&#13;
                throw response.description;&#13;
            }&#13;
            else {&#13;
                throw 'Unknown error. Check debug log for more information.'&#13;
            }&#13;
        }&#13;
    }&#13;
}&#13;
&#13;
try {&#13;
    var params = JSON.parse(value);&#13;
&#13;
    if (typeof params.Token === 'undefined') {&#13;
        throw 'Incorrect value is given for parameter &quot;Token&quot;: parameter is missing';&#13;
    }&#13;
&#13;
    alexa.token = params.Token;&#13;
&#13;
    if (params.HTTPProxy) {&#13;
        message.proxy = params.HTTPProxy;&#13;
    } &#13;
    if (['Markdown', 'HTML', 'MarkdownV2'].indexOf(params.ParseMode) !== -1) {&#13;
        Telegram.parse_mode = params.ParseMode;&#13;
    }&#13;
&#13;
    alexa.message = params.subject+ '\n' + params.message;&#13;
    alexa.sendmessage();&#13;
&#13;
    return 'OK';&#13;
}&#13;
catch (error) {&#13;
    Zabbix.Log(4, '[Alexa Webhook] notification failed: ' + error);&#13;
    throw 'Sending failed: ' + error + '.';&#13;
}</script>
            <process_tags>YES</process_tags>
            <description>Matheus Andrade</description>
            <message_templates>
                <message_template>
                    <event_source>TRIGGERS</event_source>
                    <operation_mode>PROBLEM</operation_mode>
                    <subject>Alerta no host {HOST.NAME}</subject>
                    <message>Incidente {EVENT.NAME}, com severidade {EVENT.SEVERITY}, no dia {EVENT.DATE}, Ã¡s {EVENT.TIME}</message>
                </message_template>
            </message_templates>
        </media_type>
    </media_types>
</zabbix_export>
